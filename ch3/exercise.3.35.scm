(define (squarer a b)
  (define (process-new-value)
    (if (has-value? b)
        (if (< (get-value b) 0)
            (error "square less than 0 -- SQUARER" (get-value b))
            (set-value! a (sqrt (get-value b)) me))
        (if (has-value? a)
            (let ((a-val (get-value a)))
              (set-value! b (* a-val a-val) me)))))
  (define (process-forget-value)
    (forget-value! a me)
    (forget-value! b me)
    (process-new-value))
  (define (me request)
    (cond ((eq? request 'I-have-a-value)
           (process-new-value))
          ((eq? request 'I-lost-my-value)
           (process-forget-value))
          (else
           (error "Unknown request - SQUARER" request))))
  (connect a me)
  (connect b me)
  me)

(define a1 (make-connector))
(define b1 (make-connector))

(squarer a1 b1)

(probe "A" a1)
(probe "B" b1)

(set-value! a1 9 'user)
(forget-value! a1 'user)
